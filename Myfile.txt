import com.vmware.vim25.VirtualMachineCloneSpec;
import com.vmware.vim25.VirtualMachineRelocateSpec;
import com.vmware.vim25.mo.Folder;
import com.vmware.vim25.mo.InventoryNavigator;
import com.vmware.vim25.mo.ServiceInstance;
import com.vmware.vim25.mo.Task;
import com.vmware.vim25.mo.VirtualMachine;

import java.net.URL;




    public static void main(String[] args) throws Exception {
       
        String vmname = "linux1";
        String cloneName = "linux_clone";
        //Accessing Vcenter HQ
        ServiceInstance si = new ServiceInstance(new URL(""), "", "", true);
        Folder rootFolder = si.getRootFolder();
        //Getting the VM
        System.out.println("rootFolder  " + rootFolder);
        // si.getServerConnection().logout();
        VirtualMachine vm = (VirtualMachine) new InventoryNavigator(rootFolder).searchManagedEntity("VirtualMachine", vmname);
        //Confirming the VM exist
        if (vm == null) {
            System.out.println("No VM " + vmname + " found");
            si.getServerConnection().logout();
            return;
        }


        System.out.println(" VM found here ");
        //Getting the specs
        VirtualMachineCloneSpec cloneSpec = new VirtualMachineCloneSpec();
        cloneSpec.setLocation(new VirtualMachineRelocateSpec());
        cloneSpec.setPowerOn(false);
        cloneSpec.setTemplate(false);

        //Set location of clone to be the same as template (Datastore)
        cloneSpec.setLocation(new VirtualMachineRelocateSpec());

        System.out.println("Cloning " + vmname + " into " + cloneName);
        Task task = vm.cloneVM_Task((Folder) vm.getParent(), cloneName, cloneSpec);

        System.out.println("  waitForTask ");

        String status = task.waitForTask();
        if (status == Task.SUCCESS) {
            System.out.println("VM cloned successfully.");
        } else {
            throw new Exception("Error while cloning VM");
        }

    }
    
    
    
    
    <plugins>
      <plugin>
        <artifactId>maven-assembly-plugin</artifactId>
        <version>2.4</version>
        <configuration>
          <descriptorRefs>
            <descriptorRef>jar-with-dependencies</descriptorRef>
          </descriptorRefs>
          <archive>
             <manifest>
                <mainClass>com.test.main</mainClass> // main being main.java which has my main method
             </manifest>
          </archive>
        </configuration>
        <executions>
          <execution>
            <id>make-assembly</id> <!-- this is used for inheritance merges -->
            <phase>package</phase> <!-- bind to the packaging phase -->
            <goals>
              <goal>single</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      
      
      
      33e1bfa6-3e66-4ec4-9334-b9172eab9e40
      
      8736d653-af02-4cb8-a68d-9c3ef775011c

